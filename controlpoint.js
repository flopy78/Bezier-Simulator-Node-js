export class ControlPoint {
    constructor (x, y, r, color) {

        //set attributes
        this.x = x;
        this.y = y;
        this.r = r;
        this.color = color;
        this.down = false;

        //bind draw method
        this.draw = this.draw.bind(this);
    }

    getDist(e) {
        /*function to get the euclidian distance between the control point and the mouse event (a down click here).

        Arguments : e (mouse down click event)
        Return  : distance between the control point and the mouse click
        */

        //determines the position of the mouse
        let rect = e.target.getBoundingClientRect();
        let x = e.clientX - rect.left;
        let y = e.clientY - rect.top;

        //calculates the distance
        return Math.sqrt((this.x - x) ** 2 + (this.y - y) ** 2);
    }

    isDraggable(e) {
        /*function checking if the control point is draggable (which means that the mouse is over it) or not.

        Arguments : e (mouse down click event)
        Return : the result of the test
        */

        //checks if the distance between the center of the control point and the mouse is lower than the radius of the control point
        return (this.getDist(e) <= this.r);
    }

    draw(ctx) {
        /*function to plot the control point

        Arugments : ctx (object generated by the canvas which allows to draw on it)
        Return : return nothing
        */

        //plots the control point
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);
        ctx.fillStyle = this.color;
        ctx.fill();
        ctx.closePath();
    }
}